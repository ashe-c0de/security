spring:
  application:
    name: SECURITY
  config:
    activate:
      on-profile: dev
  banner:
    location: banner/dev.txt
  datasource:
    url: jdbc:postgresql://localhost:5432/test
    username: postgres
    password: '!ashe4321.'
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: 192.168.2.157
    port: 5672
    username: guest
    password: guest
    # confirm模式配置
    publisher-confirm-type: correlated

ding-talk:
  app-key: xxx
  app-secret: xxx

# 颁发jwtToken的私钥
oauth2:
  secret-key: 6D5970337336763979244226452948404D635166546A576E5A7234743777217A


---
spring:
  application:
    name: SECURITY
  config:
    activate:
      on-profile: test
  banner:
    location: banner/test.txt
  datasource:
    url: jdbc:postgresql://192.168.2.157:5432/test
    username: postgres
    password: '!ashe4321.'
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

ding-talk:
  app-key: xxx
  app-secret: xxx

# 颁发jwtToken的私钥
oauth2:
  secret-key: 6D5970337336763979244226452948404D635166546A576E5A7234743777217A
---
spring:
  application:
    name: SECURITY
  config:
    activate:
      on-profile: prod
  banner:
    location: banner/prod.txt
  datasource:
    url: jdbc:postgresql://192.168.2.157:5432/test
    username: postgres
    password: '!ashe4321.'
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

ding-talk:
  app-key: xxx
  app-secret: xxx

# 颁发jwtToken的私钥
oauth2:
  secret-key: 6D5970337336763979244226452948404D635166546A576E5A7234743777217A